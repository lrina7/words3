let currentWordIndex = 0;
let userErrors = [];
let isMistakeMode = false;
let mistakeWords = [];

const wordContainer = document.getElementById("word");
const resultEl = document.getElementById("result");
const checkButton = document.getElementById("checkButton");
const finalScreen = document.getElementById("finalScreen");
const mistakeList = document.getElementById("mistakeList");
const mistakesContainer = document.getElementById("mistakesContainer");
const owlImage = document.getElementById("owlImage");
const h2 = document.querySelector("h2");
const retryMistakesBtn = document.getElementById("retryMistakes");
const playAgainBtn = document.getElementById("playAgain");

function getCurrentList() {
  return isMistakeMode ? mistakeWords : words;
}

function renderWord() {
  wordContainer.innerHTML = "";
  resultEl.textContent = "";
  owlImage.src = "assets/image/cat.jpg";

  const current = getCurrentList()[currentWordIndex];
  let answerIndex = 0;

  const inputFields = [];

  current.word.split("").forEach((char) => {
    if (char === "_") {
      const input = document.createElement("input");
      input.setAttribute("maxlength", "1");
      input.classList.add("missing-letter");
      input.dataset.answerIndex = answerIndex;
      inputFields.push(input);
      wordContainer.appendChild(input);
      answerIndex++;
    } else {
      const span = document.createElement("span");
      span.textContent = char;
      span.classList.add("word-part");
      wordContainer.appendChild(span);
    }
  });

  inputFields.forEach((input, idx) => {
    input.addEventListener("input", (e) => {
      if (e.inputType !== "deleteContentBackward") {
        if (input.value && inputFields[idx + 1]) {
          inputFields[idx + 1].focus();
        }
      }
    });
  });

  if (inputFields[0]) inputFields[0].focus();
}

function checkAnswer() {
  const inputs = wordContainer.querySelectorAll("input");
  const current = getCurrentList()[currentWordIndex];
  const userAnswers = Array.from(inputs).map((input) =>
    input.value.toLowerCase()
  );
  const correctAnswers = current.answers;

  const isCorrect = userAnswers.join("") === correctAnswers.join("");

  if (isCorrect) {
    resultEl.textContent = "–ú–æ–ª–æ–¥–µ—Ü!";
    resultEl.className = "result correct";
    owlImage.src = "assets/image/smile.png";
    showStar();
  } else {
    resultEl.textContent = "–û—à–∏–±–∫–∞!";
    resultEl.className = "result wrong";
    owlImage.src = "assets/image/cry.png";
    userErrors.push(current);
  }

  setTimeout(() => {
    currentWordIndex++;
    if (currentWordIndex >= getCurrentList().length) {
      showFinalScreen();
    } else {
      renderWord();
    }
  }, 800);
}

function showFinalScreen() {
  // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ—á–∏—â–∞–µ–º –ø–æ–ª–µ —Å–ª–æ–≤–∞
  h2.style.display = "none";
  wordContainer.innerHTML = "";
  resultEl.textContent = "";

  wordContainer.style.minHeight = "auto";

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
  finalScreen.style.display = "block";

  // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫
  mistakeList.innerHTML = "";

  // –°–æ–∑–¥–∞—ë–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
  const finalText = document.createElement("p");
  finalText.className = "praise";

  if (userErrors.length > 0) {
    finalText.innerHTML = "–¢—ã –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫–∏üßê";

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—à–∏–±–æ–∫ –∏ —Å–ø–∏—Å–æ–∫
    mistakesContainer.style.display = "block";

    userErrors.forEach((word) => {
      const li = document.createElement("li");
      li.textContent = word.fullWord;
      mistakeList.appendChild(li);
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–†–∞–±–æ—Ç–∞ –Ω–∞–¥ –æ—à–∏–±–∫–∞–º–∏"
    retryMistakesBtn.style.display = "inline-block";
  } else {
    finalText.innerHTML =
      "–£—Ä–∞!<br>–í—Å–µ —Å–ª–æ–≤–∞ –±–µ–∑ –æ—à–∏–±–æ–∫!<br>–¢—ã ‚Äî —Å—É–ø–µ—Ä–∑–≤–µ–∑–¥–∞! üåü";

    mistakesContainer.style.display = "none";
    retryMistakesBtn.style.display = "none";
  }

  // –í—Å—Ç–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ wordContainer
  wordContainer.appendChild(finalText);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ò–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑"
  playAgainBtn.style.display = "inline-block";

  // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å"
  checkButton.style.display = "none";

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  owlImage.src = "assets/image/cat.jpg";
}

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã, —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º ‚Äî —Ä–µ–∂–∏–º –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –æ—à–∏–±–æ–∫
function startGame(fromMistakes = false) {
  isMistakeMode = fromMistakes;
  currentWordIndex = 0;
  owlImage.src = "assets/image/cat.jpg";

  if (fromMistakes) {
    mistakeWords = [...userErrors];
    userErrors = [];
  } else {
    userErrors = [];
  }

  finalScreen.style.display = "none";
  h2.style.display = "block";
  checkButton.style.display = "inline-block";
  mistakesContainer.style.display = "none";
  retryMistakesBtn.style.display = "none";
  playAgainBtn.style.display = "none";

  renderWord();
}

function showStar() {
  const star = document.createElement("div");
  star.classList.add("star-animation");
  star.textContent = "‚≠ê";
  star.style.left = Math.random() * 80 + 10 + "%";
  document.body.appendChild(star);
  setTimeout(() => star.remove(), 1500);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
checkButton.addEventListener("click", checkAnswer);

retryMistakesBtn.addEventListener("click", () => {
  if (userErrors.length > 0) {
    startGame(true);
  }
});

playAgainBtn.addEventListener("click", () => {
  startGame(false);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Enter –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
document.addEventListener("keydown", (e) => {
  if (e.key === "Enter" && checkButton.style.display !== "none") {
    checkAnswer();
  }
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
startGame();
